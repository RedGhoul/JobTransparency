
@using Syncfusion.EJ2
@*<style>
    table.center {
        margin-left: auto;
        margin-right: auto;
    }

    .dataTables_wrapper.dt-bootstrap4.no-footer {
        background-color: bisque;
        padding: 50px;
        border-radius: 25px;
    }

    #myTable {
        margin-top: 25px !important;
        margin-bottom: 25px !important;
    }

    .dataTables_info {
        font-size: smaller;
    }

    .pagination {
        font-size: smaller;
    }

    #myTable > tbody {
        font-size: 18px;
    }
</style>*@
@using (Html.BeginForm("Create", "Applies", FormMethod.Post))
{
    @Html.AntiForgeryToken()
}

<section class="site-section" style="background-color: currentColor;padding-top:200px; padding-right: 20px; padding-left: 20px;">


        <ejs-grid id="Grid"  dataSource="ViewBag.dataSource"  toolbar="@(new List<string>() { "Delete", "Cancel" })"  allowPaging="true" load="load" created="created" actionBegin="actionBegin" actionComplete="actionComplete" dataBound="dataBound" rowSelecting="rowSelecting" cellSelected="rowSelected" columnDragStart="columnDragStart" columnDrag="columnDrag" columnDrop="columnDrop" allowReordering="true" allowSorting="true">
            <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" newRowPosition="Top"></e-grid-editSettings>
           
            <e-grid-pagesettings pageCount="5"></e-grid-pagesettings>
            <e-grid-columns>
                <e-grid-column field="Title" headerText="Title" width="200"></e-grid-column>
                <e-grid-column field="Company" headerText="Company" width="100"></e-grid-column>
                <e-grid-column field="Location" headerText="Location" width="80"></e-grid-column>
                <e-grid-column field="JobSource" headerText="JobSource" width="80"></e-grid-column>
                <e-grid-column field="Applicates" headerText="Applicates" width="80"></e-grid-column>
                <e-grid-column field="Views" headerText="Views" width="80"></e-grid-column>
            </e-grid-columns>
            </ejs-grid>


    
</section>
<script>
    function columnDragStart(){
        appendElement('Grid <b>columnDragStart</b> event called<hr>');
    }
    function columnDrop() {
        appendElement('Grid <b>columnDrop</b> event called<hr>');
    }
    function columnDrag(){
        appendElement('Grid <b>columnDrag</b> event called<hr>');
    }
    function load(){
        appendElement('Grid <b>load</b> event called<hr>');
    }
    function created(){
        appendElement('Grid <b>create</b> event called<hr>');
    }

    function actionComplete(){
        appendElement('Grid <b>actionComplete</b> event called<hr>');
    }
    function dataBound(){
        appendElement('Grid <b>dataBound</b> event called<hr>');
    }
    function rowSelecting(){
        appendElement('Grid <b>rowSelecting</b> event called<hr>');
    }
    function rowSelected(args){
        var selectedrowindex= this.getSelectedRowIndexes();  // get the selected row indexes.
        //alert(selectedrowindex); // to alert the selected row indexes.
        var selectedrecords = this.getSelectedRecords();  // get the selected records.
        //alert(selectedrecords);
        console.log(args.currentCell.innerHTML);
    }
    function appendElement(html) {
        console.log(html);
    }
    function rowPositionChange(args) { 
        var grid = document.getElementById("Grid").ej2_instances[0];           
        grid.editSettings.newRowPosition = this.value;
    }

    function actionBegin(args) {
        var grid = document.getElementById("Grid").ej2_instances[0];
        
        if (args.requestType === 'save') {
            console.log(args.data);
            if (grid.pageSettings.currentPage !== 1 && grid.editSettings.newRowPosition === 'Top') {
                
                args.index = (grid.pageSettings.currentPage * grid.pageSettings.pageSize) - grid.pageSettings.pageSize;
            } else if (grid.editSettings.newRowPosition === 'Bottom') {
                args.index = (grid.pageSettings.currentPage * grid.pageSettings.pageSize) - 1;
            }
        }

        if (args.requestType === 'delete') {
            console.log("delete");
            console.log(args.data);
        }
    }
    //document.getElementById("clear").addEventListener("click", function() { 

    //    document.getElementById('EventLog').innerHTML = '';
    //})

</script>
<style>
    #typeddl {
        min-width: 100px;
    }
</style>
@section Scripts {

    

}
